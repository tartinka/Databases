-- MySQL Script generated by MySQL Workbench
-- Thu Jun 11 14:17:55 2020
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `mydb` DEFAULT CHARACTER SET utf8 ;
USE `mydb` ;

-- -----------------------------------------------------
-- Table `mydb`.`account_types`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`account_types` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `account_type` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC) VISIBLE,
  UNIQUE INDEX `account_type_UNIQUE` (`account_type` ASC) VISIBLE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`users`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`users` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `first_name` VARCHAR(45) NOT NULL,
  `Last_name` VARCHAR(45) NOT NULL,
  `created_at` DATETIME NOT NULL DEFAULT Now(),
  `updated_at` DATETIME NOT NULL DEFAULT Now(),
  `account_type_id` INT UNSIGNED NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC) VISIBLE,
  CONSTRAINT `users_account_type_id_fk`
    FOREIGN KEY (`account_type_id`)
    REFERENCES `mydb`.`account_types` (`id`)
    ON DELETE RESTRICT
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`profiles`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`profiles` (
  `user_id` INT NOT NULL,
  `e-mail` VARCHAR(100) NOT NULL,
  `birthday` DATETIME NULL,
  UNIQUE INDEX `user_id_UNIQUE` (`user_id` ASC) VISIBLE,
  UNIQUE INDEX `e-mail_UNIQUE` (`e-mail` ASC) VISIBLE,
  CONSTRAINT `profiles_user_id_fk`
    FOREIGN KEY (`user_id`)
    REFERENCES `mydb`.`users` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`project_statuses`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`project_statuses` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `status_name` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC) VISIBLE,
  UNIQUE INDEX `project_type_name_UNIQUE` (`status_name` ASC) VISIBLE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`teams`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`teams` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `team_description` VARCHAR(255) NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC) VISIBLE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`projects`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`projects` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `created_by` INT NOT NULL,
  `project_name` VARCHAR(255) NOT NULL,
  `team_id` INT NOT NULL,
  `project_status_id` INT NOT NULL,
  UNIQUE INDEX `id_UNIQUE` (`id` ASC) VISIBLE,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `project_name_UNIQUE` (`project_name` ASC) VISIBLE,
  CONSTRAINT `projects_project_status_id_fk`
    FOREIGN KEY (`project_status_id`)
    REFERENCES `mydb`.`project_statuses` (`id`)
    ON DELETE RESTRICT
    ON UPDATE CASCADE,
  CONSTRAINT `projects_team_id_fk`
    FOREIGN KEY (`team_id`)
    REFERENCES `mydb`.`teams` (`id`)
    ON DELETE RESTRICT
    ON UPDATE CASCADE,
  CONSTRAINT `projects_created_by_fk`
    FOREIGN KEY (`created_by`)
    REFERENCES `mydb`.`users` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`member_statuses`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`member_statuses` (
  `id` INT NOT NULL,
  `member_status_name` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC) VISIBLE,
  UNIQUE INDEX `member_status_name_UNIQUE` (`member_status_name` ASC) VISIBLE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`team_members`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`team_members` (
  `team_id` INT NOT NULL,
  `user_id` INT NOT NULL,
  `member_status_id` INT NOT NULL,
  CONSTRAINT `team_members_team_id_fk`
    FOREIGN KEY (`team_id`)
    REFERENCES `mydb`.`teams` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `team_members_user_id_fk`
    FOREIGN KEY (`user_id`)
    REFERENCES `mydb`.`users` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `team_members_member_status_id_fk`
    FOREIGN KEY (`member_status_id`)
    REFERENCES `mydb`.`member_statuses` (`id`)
    ON DELETE RESTRICT
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`task_statuses`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`task_statuses` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `task_status_name` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC) VISIBLE,
  UNIQUE INDEX `task_status_name_UNIQUE` (`task_status_name` ASC) VISIBLE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`tasks`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`tasks` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `task_name` VARCHAR(255) NOT NULL,
  `task_description` TINYTEXT NULL,
  `task_status_id` INT NOT NULL,
  `deadline` DATETIME NOT NULL,
  `created_at` DATETIME NOT NULL DEFAULT Now(),
  `project_id` INT NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC) VISIBLE,
  UNIQUE INDEX `task_name_UNIQUE` (`task_name` ASC) VISIBLE,
  CONSTRAINT `tasks_project_id_fk`
    FOREIGN KEY (`project_id`)
    REFERENCES `mydb`.`projects` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `tasks.task_status_id`
    FOREIGN KEY (`task_status_id`)
    REFERENCES `mydb`.`task_statuses` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`task_users`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`task_users` (
  `task_id` INT NOT NULL,
  `from_user_id` INT NOT NULL,
  `task_status_id` INT NOT NULL,
  `to_user_id` INT NOT NULL,
  `updated_at` DATETIME NOT NULL,
  CONSTRAINT `task_users_from_user_id_fk`
    FOREIGN KEY (`from_user_id`)
    REFERENCES `mydb`.`users` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `task_users_task_id_fk`
    FOREIGN KEY (`task_id`)
    REFERENCES `mydb`.`tasks` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `task_users_task_status_id`
    FOREIGN KEY (`task_status_id`)
    REFERENCES `mydb`.`task_statuses` (`id`)
    ON DELETE RESTRICT
    ON UPDATE CASCADE,
  CONSTRAINT `task_users_to_user_id_fk`
    FOREIGN KEY (`to_user_id`)
    REFERENCES `mydb`.`users` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`media_types`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`media_types` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `media_type_name` VARCHAR(10) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC) VISIBLE,
  UNIQUE INDEX `media_type_name_UNIQUE` (`media_type_name` ASC) VISIBLE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`target_types`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`target_types` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `target_table` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC) VISIBLE,
  UNIQUE INDEX `target_type_name_UNIQUE` (`target_table` ASC) VISIBLE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`media`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`media` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `media_type_id` INT NOT NULL,
  `target_type_id` INT NOT NULL,
  `target_id` INT NOT NULL,
  `link` VARCHAR(255) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC) VISIBLE,
  UNIQUE INDEX `link_UNIQUE` (`link` ASC) VISIBLE,
  CONSTRAINT `media_media_type_id_fk`
    FOREIGN KEY (`media_type_id`)
    REFERENCES `mydb`.`media_types` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `media_target_type_id_fk`
    FOREIGN KEY (`target_type_id`)
    REFERENCES `mydb`.`target_types` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`comments`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`comments` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `comment_text` MEDIUMTEXT NOT NULL,
  `task_id` INT NOT NULL,
  `user_id` INT NOT NULL,
  `created_at` DATETIME NOT NULL DEFAULT Now(),
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC) VISIBLE,
  CONSTRAINT `comments_task_id_fk`
    FOREIGN KEY (`task_id`)
    REFERENCES `mydb`.`tasks` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `comments_user_id_fk`
    FOREIGN KEY (`user_id`)
    REFERENCES `mydb`.`users` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
